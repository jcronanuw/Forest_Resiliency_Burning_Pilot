perc_fall_2 <- -1*round((((total_burned_a$consume-total_burned_a$fall_2)/total_burned_a$consume)*100),0)
perc_fall_4 <- -1*round((((total_burned_a$consume-total_burned_a$fall_4)/total_burned_a$consume)*100),0)
perc_spring_2 <- -1*round((((total_burned_a$consume-total_burned_a$spring_2)/total_burned_a$consume)*100),0)
perc_spring_4 <- -1*round((((total_burned_a$consume-total_burned_a$spring_4)/total_burned_a$consume)*100),0)
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_c <- total_burned_a[total_burned_a$site %in% c("Angel", "Chumstick", "Orion",
total_burned_c
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_c <- total_burned_a[total_burned_a$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),]
total_burned_c
total_burned_c <- total_burned_b[total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),]
total_burned_c
total_burned_c <- total_burned_b[total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
total_burned_c
mean(36, 26, 18, 22)#mean of difference between measured and predicted for Consume v. 2.1
mean(26, 16, 17, 45)#mean of difference between measured and predicted for Consume v. 4.2
duff_burned_a <- consumption[consumption$cat == "Duff",]
#Seperate total loading from loading by fuel strata.
duff_burned_a <- consumption[consumption$cat == "Duff",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm2)/duff_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm4)/duff_burned_a$consume)*100),0)
perc_fall_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_2)/duff_burned_a$consume)*100),0)
perc_fall_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_4)/duff_burned_a$consume)*100),0)
perc_spring_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_2)/duff_burned_a$consume)*100),0)
perc_spring_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_4)/duff_burned_a$consume)*100),0)
duff_burned_b <- data.frame(duff_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
duff_burned_c <- duff_burned_b[duff_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#This will show duff loading, measured consumption, predicted consumption, percent differences for burned units.
duff_burned_c
head(consumption)
consumption[1:20,]
#Seperate total loading from loading by fuel strata.
duff_burned_a <- consumption[consumption$cat == "duff",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm2)/duff_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm4)/duff_burned_a$consume)*100),0)
perc_fall_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_2)/duff_burned_a$consume)*100),0)
perc_fall_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_4)/duff_burned_a$consume)*100),0)
perc_spring_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_2)/duff_burned_a$consume)*100),0)
perc_spring_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_4)/duff_burned_a$consume)*100),0)
duff_burned_b <- data.frame(duff_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
duff_burned_c <- duff_burned_b[duff_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#This will show duff loading, measured consumption, predicted consumption, percent differences for burned units.
duff_burned_c
mean(36, 26, 18, 22, 34, 37)#mean of difference between measured and predicted for Consume v. 2.1
mean(26, 16, 17, 45, 24, 11)#mean of difference between measured and predicted for Consume v. 4.2
mean(18, 41, 21, 17, 35, 169)#mean of difference between measured and predicted for Consume v. 2.1
mean(44, 45, 46, 62, 100, 100)#mean of difference between measured and predicted for Consume v. 4.2
mean(36, 26, 18, 22, 34, 37)
mean(c(36, 26, 18, 22, 34, 37))#mean of difference between measured and predicted for Consume v. 2.1
mean(c(26, 16, 17, 45, 24, 11))#mean of difference between measured and predicted for Consume v. 4.2
head(consumption)
cats_a <- consumption[consumption$cat != "Total",]
cats_a <- consumption[consumption$cat != "Total",]
cats_b <- cats_a[order(cats_a$site),]
TotalLoading <- ddply(cats_b, "site", summarise,
total = sum(pre, na.rm = T))
TotalLoading
total <- expand.grid(1:length(unique(cats_b$cat)), TotalLoading$total)[2]
cats_c <- data.frame(cats_b, total = total)
head(cats_c)
cats_c
total_burned_c
total_burned_a
perc_fall_2 <- round(((total_burned_a$fall_2/total_burned_a$pre)*100),0)
perc_fall_4 <- round(((total_burned_a$fall_4/total_burned_a$pre)*100),0)
perc_spring_2 <- round(((total_burned_a$spring_2/total_burned_a$pre)*100),0)
perc_spring_4 <- round(((total_burned_a$spring_4/total_burned_a$pre)*100),0)
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_c <- total_burned_b[total_burned_b$site %in% -c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
total_burned_c <- total_burned_b[total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
total_burned_d <- total_burned_b[!total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
total_burned_d
total_burned_d <- total_burned_b[!total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,9,10,11,12)]
total_burned_d
litter_all_a <- consumption[consumption$cat == "litter",]
head(litter_a)
head(litter_all_a)
litter_all_a[order(litter_all_a$pre),]
duff_burned_c
duff_all_a <- consumption[consumption$cat == "duff",]
duff_all_a[order(duff_all_a$pre),]
mean(c(14.27,29.71))
mean(c(26.45,13.90))
#PURPOSE OF THIS SCRIPT IS TO SUMMARIZE LOADING AND CONSUMPTION RESULTS FOR TEXT IN JULY 30, 2017 REPORT.
#Reset functions
rm(list=ls())
dev.off()
#Libraries
library(dplyr)
library(plyr)
library(data.table)
setwd("C:/Users/jcronan/Documents/GitHub/Forest_Resiliency_Burning_Pilot")
#Open file with tree species metadata:
consumption <- read.table("wad_20170727_AppendixA.csv", header=TRUE,
sep=",", na.strings="NA", dec=".", strip.white=TRUE)
#Changle column names to something shorter. Easier to write script.
colnames(consumption) <- c("site", "cat", "pre", "post", "consume", "percent", "fm2", "fm4",
"fall_2", "fall_4", "spring_2", "spring_4")
#Create a table without total surface fuel loading category.
by_cat <- consumption[consumption$cat != "Total",]
#Sum loading for each category
preLoad_summary <- ddply(by_cat, "cat", summarise,
sum = sum(pre, na.rm = T),
count = length(pre[!is.na(pre)]))
#Calculate the total fuel loading of all sites combined.
total <- sum(preLoad_summary$sum)
#calculate the percent contribution for total fuel loading for each fuel strata/
fractional_contribution <- round((preLoad_summary$sum/total)*100,2)
#Show the percent contribution for each fuel strata
data.frame(cat = preLoad_summary$cat, percent = fractional_contribution)
#Check totals
sum(fractional_contribution)
#############
#TOTAL LOADING
#Seperate total loading from loading by fuel strata.
total_burned_a <- consumption[consumption$cat == "Total",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((total_burned_a$consume-total_burned_a$fm2)/total_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((total_burned_a$consume-total_burned_a$fm4)/total_burned_a$consume)*100),0)
#Calculate the percent of total pre-fire fuels predicted to consume
perc_fall_2 <- round(((total_burned_a$fall_2/total_burned_a$pre)*100),0)
perc_fall_4 <- round(((total_burned_a$fall_4/total_burned_a$pre)*100),0)
perc_spring_2 <- round(((total_burned_a$spring_2/total_burned_a$pre)*100),0)
perc_spring_4 <- round(((total_burned_a$spring_4/total_burned_a$pre)*100),0)
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_c <- total_burned_b[total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#############
#DUFF LOADING
#Seperate total loading from loading by fuel strata.
duff_burned_a <- consumption[consumption$cat == "duff",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm2)/duff_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm4)/duff_burned_a$consume)*100),0)
perc_fall_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_2)/duff_burned_a$consume)*100),0)
perc_fall_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_4)/duff_burned_a$consume)*100),0)
perc_spring_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_2)/duff_burned_a$consume)*100),0)
perc_spring_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_4)/duff_burned_a$consume)*100),0)
duff_burned_b <- data.frame(duff_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
duff_burned_c <- duff_burned_b[duff_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#This will show duff loading, measured consumption, predicted consumption, percent differences for burned units.
duff_burned_c
mean(18, 41, 21, 17, 35, 169)#mean of difference between measured and predicted for Consume v. 2.1
mean(44, 45, 46, 62, 100, 100)#mean of difference between measured and predicted for Consume v. 4.2
#Subset data by category (i.e. exclude totals) and order data frame by sites.
cats_a <- consumption[consumption$cat != "Total",]
cats_b <- cats_a[order(cats_a$site),]
cats_b
total_burned_d
total_burned_c
#This will show loading, measured consumption, predicted consumption, percent differences for burned units.
total_burned_c
mean(c(36, 26, 18, 22, 34, 37))#mean of difference between measured and predicted for Consume v. 2.1
mean(c(26, 16, 17, 45, 24, 11))#mean of difference between measured and predicted for Consume v. 4.2
total_burned_d <- total_burned_b[!total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,9,10,11,12)]
total_burned_d
total_burned_b
total_burned_d <- total_burned_b[!total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,9,10,11,12,
15,16,17,18)]
total_burned_d
total_burned_d <- total_burned_b[,c(1,2,3,9,10,11,12,15,16,17,18)]
total_burned_d
range(total_burned_d$perc_fall_2)
range(total_burned_d$perc_fall_4)
range(total_burned_d$perc_spring_2)
range(total_burned_d$perc_spring_4)
#PURPOSE OF THIS SCRIPT IS TO SUMMARIZE LOADING AND CONSUMPTION RESULTS FOR TEXT IN JULY 30, 2017 REPORT.
#Reset functions
rm(list=ls())
dev.off()
#Libraries
library(dplyr)
library(plyr)
library(data.table)
setwd("C:/Users/jcronan/Documents/GitHub/Forest_Resiliency_Burning_Pilot")
#Open file with tree species metadata:
consumption <- read.table("wad_20170727_AppendixA.csv", header=TRUE,
sep=",", na.strings="NA", dec=".", strip.white=TRUE)
#Changle column names to something shorter. Easier to write script.
colnames(consumption) <- c("site", "cat", "pre", "post", "consume", "percent", "fm2", "fm4",
"fall_2", "fall_4", "spring_2", "spring_4")
###########
#IMPUTE DUFF DATA INTO NATAPOC AND VULCAN FROM UNIT WITH CLOSEST MATCHING LITTER VALUE
#Seperate total loading from loading by fuel strata.
#litter_all_a <- consumption[consumption$cat == "litter",]
#litter_all_a[order(litter_all_a$pre),]
#Vulcan litter loading is between Hanlon and Paradise 90; use an average of these two values.
#Natapoc litter loading is between UR-1 and Sherman Creek; use an average of these two values.
#duff_all_a <- consumption[consumption$cat == "duff",]
#duff_all_a[order(duff_all_a$pre),]
#mean(c(14.27,29.71))#imputed duff loading for Vulcan
#mean(c(26.45,13.90))#imputed duff loading for Natapoc
#Create a table without total surface fuel loading category.
by_cat <- consumption[consumption$cat != "Total",]
#Sum loading for each category
preLoad_summary <- ddply(by_cat, "cat", summarise,
sum = sum(pre, na.rm = T),
count = length(pre[!is.na(pre)]))
#Calculate the total fuel loading of all sites combined.
total <- sum(preLoad_summary$sum)
#calculate the percent contribution for total fuel loading for each fuel strata/
fractional_contribution <- round((preLoad_summary$sum/total)*100,2)
#Show the percent contribution for each fuel strata
data.frame(cat = preLoad_summary$cat, percent = fractional_contribution)
#Check totals
sum(fractional_contribution)
#############
#TOTAL LOADING
#Seperate total loading from loading by fuel strata.
total_burned_a <- consumption[consumption$cat == "Total",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((total_burned_a$consume-total_burned_a$fm2)/total_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((total_burned_a$consume-total_burned_a$fm4)/total_burned_a$consume)*100),0)
#Calculate the percent of total pre-fire fuels predicted to consume
perc_fall_2 <- round(((total_burned_a$fall_2/total_burned_a$pre)*100),0)
perc_fall_4 <- round(((total_burned_a$fall_4/total_burned_a$pre)*100),0)
perc_spring_2 <- round(((total_burned_a$spring_2/total_burned_a$pre)*100),0)
perc_spring_4 <- round(((total_burned_a$spring_4/total_burned_a$pre)*100),0)
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_c <- total_burned_b[total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#This will show loading, measured consumption, predicted consumption, percent differences for burned units.
total_burned_c
mean(c(36, 26, 18, 22, 34, 37))#mean of difference between measured and predicted for Consume v. 2.1
mean(c(26, 16, 17, 45, 24, 11))#mean of difference between measured and predicted for Consume v. 4.2
total_burned_d <- total_burned_b[,c(1,2,3,9,10,11,12,15,16,17,18)]
range(total_burned_d$perc_fall_2)
range(total_burned_d$perc_fall_4)
range(total_burned_d$perc_spring_2)
range(total_burned_d$perc_spring_4)
total_burned_d
mean(c(14.27,29.71))
mean(c(26.45,13.90))
#PURPOSE OF THIS SCRIPT IS TO SUMMARIZE LOADING AND CONSUMPTION RESULTS FOR TEXT IN JULY 30, 2017 REPORT.
#Reset functions
rm(list=ls())
dev.off()
#Libraries
library(dplyr)
library(plyr)
library(data.table)
setwd("C:/Users/jcronan/Documents/GitHub/Forest_Resiliency_Burning_Pilot")
#Open file with tree species metadata:
consumption <- read.table("wad_20170727_AppendixA.csv", header=TRUE,
sep=",", na.strings="NA", dec=".", strip.white=TRUE)
#Changle column names to something shorter. Easier to write script.
colnames(consumption) <- c("site", "cat", "pre", "post", "consume", "percent", "fm2", "fm4",
"fall_2", "fall_4", "spring_2", "spring_4")
###########
#IMPUTE DUFF DATA INTO NATAPOC AND VULCAN FROM UNIT WITH CLOSEST MATCHING LITTER VALUE
#Seperate total loading from loading by fuel strata.
#litter_all_a <- consumption[consumption$cat == "litter",]
#litter_all_a[order(litter_all_a$pre),]
#Vulcan litter loading is between Hanlon and Paradise 90; use an average of these two values.
#Natapoc litter loading is between UR-1 and Sherman Creek; use an average of these two values.
#duff_all_a <- consumption[consumption$cat == "duff",]
#duff_all_a[order(duff_all_a$pre),]
#mean(c(14.27,29.71))#imputed duff loading for Vulcan
#mean(c(26.45,13.90))#imputed duff loading for Natapoc
#Create a table without total surface fuel loading category.
by_cat <- consumption[consumption$cat != "Total",]
#Sum loading for each category
preLoad_summary <- ddply(by_cat, "cat", summarise,
sum = sum(pre, na.rm = T),
count = length(pre[!is.na(pre)]))
#Calculate the total fuel loading of all sites combined.
total <- sum(preLoad_summary$sum)
#calculate the percent contribution for total fuel loading for each fuel strata/
fractional_contribution <- round((preLoad_summary$sum/total)*100,2)
#Show the percent contribution for each fuel strata
data.frame(cat = preLoad_summary$cat, percent = fractional_contribution)
#Check totals
sum(fractional_contribution)
#############
#TOTAL LOADING
#Seperate total loading from loading by fuel strata.
total_burned_a <- consumption[consumption$cat == "Total",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((total_burned_a$consume-total_burned_a$fm2)/total_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((total_burned_a$consume-total_burned_a$fm4)/total_burned_a$consume)*100),0)
#Calculate the percent of total pre-fire fuels predicted to consume
perc_fall_2 <- round(((total_burned_a$fall_2/total_burned_a$pre)*100),0)
perc_fall_4 <- round(((total_burned_a$fall_4/total_burned_a$pre)*100),0)
perc_spring_2 <- round(((total_burned_a$spring_2/total_burned_a$pre)*100),0)
perc_spring_4 <- round(((total_burned_a$spring_4/total_burned_a$pre)*100),0)
total_burned_b <- data.frame(total_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
total_burned_c <- total_burned_b[total_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#This will show loading, measured consumption, predicted consumption, percent differences for burned units.
total_burned_c
mean(c(36, 26, 18, 22, 34, 37))#mean of difference between measured and predicted for Consume v. 2.1
mean(c(26, 16, 17, 45, 24, 11))#mean of difference between measured and predicted for Consume v. 4.2
total_burned_d <- total_burned_b[,c(1,2,3,9,10,11,12,15,16,17,18)]
range(total_burned_d$perc_fall_2)
range(total_burned_d$perc_fall_4)
range(total_burned_d$perc_spring_2)
range(total_burned_d$perc_spring_4)
total_burned_d
head(cats_c)
#############
#DUFF LOADING
#Seperate total loading from loading by fuel strata.
duff_burned_a <- consumption[consumption$cat == "duff",]
#Calculate the percent deviation from measured value for each Consume run
perc_fm_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm2)/duff_burned_a$consume)*100),0)
perc_fm_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fm4)/duff_burned_a$consume)*100),0)
perc_fall_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_2)/duff_burned_a$consume)*100),0)
perc_fall_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$fall_4)/duff_burned_a$consume)*100),0)
perc_spring_2 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_2)/duff_burned_a$consume)*100),0)
perc_spring_4 <- -1*round((((duff_burned_a$consume-duff_burned_a$spring_4)/duff_burned_a$consume)*100),0)
duff_burned_b <- data.frame(duff_burned_a, perc_fm_2, perc_fm_4, perc_fall_2, perc_fall_4, perc_spring_2, perc_spring_4)
duff_burned_c <- duff_burned_b[duff_burned_b$site %in% c("Angel", "Chumstick", "Orion",
"Paradise 90", "Sherman Creek", "Mile25"),c(1,2,3,4,5,6,7,8,13,14)]
#This will show duff loading, measured consumption, predicted consumption, percent differences for burned units.
duff_burned_c
mean(18, 41, 21, 17, 35, 169)#mean of difference between measured and predicted for Consume v. 2.1
mean(44, 45, 46, 62, 100, 100)#mean of difference between measured and predicted for Consume v. 4.2
#Subset data by category (i.e. exclude totals) and order data frame by sites.
cats_a <- consumption[consumption$cat != "Total",]
cats_b <- cats_a[order(cats_a$site),]
#Calculate actual total loadings (exclude imputed duff loading for Vulcan and Natapoc)
TotalLoading <- ddply(cats_b, "site", summarise,
total = sum(pre, na.rm = T))
total <- expand.grid(1:length(unique(cats_b$cat)), TotalLoading$total)[2]
cats_c <- data.frame(cats_b, total = total)
head(cats_c)
TotalPredConsumption <- ddply(cats_c, "site", summarise,
total_fall2 = sum(fall_2, na.rm = T),
total_fall4 = sum(fall_4, na.rm = T),
total_spring2 = sum(spring_2, na.rm = T),
total_spring4 = sum(spring_4, na.rm = T))
TotalPredConsumption
total_fall2 <- expand.grid(1:length(unique(cats_c$cat)), TotalPredConsumption$total_fall2)[2]
total_fall4 <- expand.grid(1:length(unique(cats_c$cat)), TotalPredConsumption$total_fall4)[2]
total_spring2 <- expand.grid(1:length(unique(cats_c$cat)), TotalPredConsumption$total_spring2)[2]
total_spring4 <- expand.grid(1:length(unique(cats_c$cat)), TotalPredConsumption$total_spring4)[2]
cats_d <- data.frame(cats_c, total_fall2, total_fall4, total_spring2, total_spring4)
cats_d <- data.frame(cats_c, total_fall2, total_fall4, total_spring2, total_spring4)
cats_d
head(cats_d)
perc_of_total_f2 <- cats_d$fall_2/cats_d$Var2.1
perc_of_total_f4 <- cats_d$fall_4/cats_d$Var2.2
perc_of_total_s2 <- cats_d$spring_2/cats_d$Var2.3
perc_of_total_s4 <- cats_d$spring_4/cats_d$Var2.4
cats_e <- data.frame(cats_d, perc_of_total_f2, perc_of_total_f4, perc_of_total_s2, perc_of_total_s4)
head(cats_e)
cats_a[1:20,]
consumption[1:20,]
TotalPredConsumption <- ddply(cats_c, "cat", summarise,
pre = sum(pre),
fall_2 = sum(fall_2),
fall_4 = sum(fall_4),
spring_2 = sum(spring_2),
spring_2 = sum(spring_2))
TotalPredConsumption
total_burned_a
TotalPredConsumption <- ddply(total_burned_a, "cat", summarise,
pre = sum(pre),
fall_2 = sum(fall_2),
fall_4 = sum(fall_4),
spring_2 = sum(spring_2),
spring_2 = sum(spring_2))
TotalPredConsumption
TotalPredConsumption_xCat <- ddply(cats_c, "cat", summarise,
pre = sum(pre),
fall_2 = sum(fall_2),
fall_4 = sum(fall_4),
spring_2 = sum(spring_2),
spring_2 = sum(spring_2))
TotalPredConsumption_xCat
TotalPredConsumption_xCat/TotalPredConsumption
rep(TotalPredConsumption, length(TotalPredConsumption_xCat[,1]))
unlist(rep(TotalPredConsumption, length(TotalPredConsumption_xCat[,1])))
matrix(unlist(rep(TotalPredConsumption, length(TotalPredConsumption_xCat[,1]))),length(TotalPredConsumption_xCat[,1]),
length(TotalPredConsumption_xCat[1,])
)
TotalPredConsumption_xCat <- ddply(cats_c, "cat", summarise,
pre = sum(pre),
fall_2 = sum(fall_2),
fall_4 = sum(fall_4),
spring_2 = sum(spring_2),
spring_4 = sum(spring_4))
TotalPredConsumption <- ddply(total_burned_a, "cat", summarise,
pre = sum(pre),
fall_2 = sum(fall_2),
fall_4 = sum(fall_4),
spring_2 = sum(spring_2),
spring_4 = sum(spring_4))
TotalPredConsumption
TotalPredConsumption_xCat
by_cat <- matrix(TotalPredConsumption_xCat[,3:6])
by_cat
TotalPredConsumption_xCat[,3:6]
by_cat <- matrix(TotalPredConsumption_xCat[,3:6],6,4)
by_cat
str(TotalPredConsumption_xCat)
by_cat <- matrix(as.numeric(TotalPredConsumption_xCat[,3:6]),6,4)
by_cat
as.numeric(TotalPredConsumption_xCat[,3:6])
by_cat <- TotalPredConsumption_xCat[,3:6]
by_cat
str(by_cat)
by_cat <- as.matrix(by_cat,9,4)
by_cat
TotalPredConsumption
by_total <- TotalPredConsumption[,3:6]
by_total
by_total <- as.vector(by_total)
by_total
str(by_total)
by_total <- vector(by_total, numeric, length(by_total))
str(by_total)
by_total <- TotalPredConsumption[,3:6]
by_total <- vector(by_total, numeric, length(by_total))
str(by_total)
class(by_total)
by_total <- by_total
class(by_total)
by_total <- by_total$fall_2
class(by_total)
by_total <- by_total[,1]
class(by_total)
by_total <- by_total[,3:6]
class(by_total)
by_total <- TotalPredConsumption[,3:6]
by_total <- by_total[,3:6]
class(by_total)
by_total <- TotalPredConsumption[,3:6]
by_total
by_total <- by_total$fall_2
class(by_total)
by_total <- as.numeric(TotalPredConsumption[,3:6])
by_total
by_cat
by_cat <- as.numeric(TotalPredConsumption_xCat[,3:6])
by_cat <- TotalPredConsumption_xCat[,3:6]
by_cat
by_cat <- as.matrix(by_cat,9,4)
by_cat
class(by_cat)
class(by_total)
by_cat/by_total
by_cat
by_total
119.46/222.68
1.74/75/57
24.23/75.57
1.74/75.57
TotalPredCons_PercentOfTotal_a <- round(by_cat/by_total,0)
colnames(TotalPredCons_PercentOfTotal_a) <- c("fall_2", "fall_4", "spring_2", "spring_4")
TotalPredCons_PercentOfTotal_b <- data.frame(cat = TotalPredConsumption_xCat$cat, TotalPredCons_PercentOfTotal_a)
TotalPredCons_PercentOfTotal_b
TotalPredCons_PercentOfTotal_a
round(by_cat/by_total,0)
TotalPredCons_PercentOfTotal_a <- round((by_cat/by_total)*100,0)
colnames(TotalPredCons_PercentOfTotal_a) <- c("fall_2", "fall_4", "spring_2", "spring_4")
TotalPredCons_PercentOfTotal_b <- data.frame(cat = TotalPredConsumption_xCat$cat, TotalPredCons_PercentOfTotal_a)
TotalPredCons_PercentOfTotal_b
sum(TotalPredCons_PercentOfTotal_b$fall_2)
sum(TotalPredCons_PercentOfTotal_b$fall_4)
sum(TotalPredCons_PercentOfTotal_b$spring_2)
sum(TotalPredCons_PercentOfTotal_b$spring_4)
expand.grid(by_total,1:9)
expand.grid(1:9, by_total)
matrix(expand.grid(1:9, by_total)[2],9,4)
matrix(as.numeric(expand.grid(1:9, by_total)[2]),9,4)
bt <- expand.grid(1:9, by_total)[2]
bt
bt[2]
as.numeric(bt)
str(bt)
bt$Var2
as.numeric(bt$Var2)
bta <- expand.grid(1:9, by_total)[2]
btb <- as.numeric(bta$Var2)
btb
btc <- matrix(btb, 9,4)
btc
TotalPredCons_PercentOfTotal_a <- round((by_cat/btc*100,0)
TotalPredCons_PercentOfTotal_a <- round((by_cat/btc)*100,0)
TotalPredCons_PercentOfTotal_a
colnames(TotalPredCons_PercentOfTotal_a) <- c("fall_2", "fall_4", "spring_2", "spring_4")
TotalPredCons_PercentOfTotal_b <- data.frame(cat = TotalPredConsumption_xCat$cat, TotalPredCons_PercentOfTotal_a)
sum(TotalPredCons_PercentOfTotal_b$fall_2)
sum(TotalPredCons_PercentOfTotal_b$fall_4)
sum(TotalPredCons_PercentOfTotal_b$spring_2)
sum(TotalPredCons_PercentOfTotal_b$spring_4)
by_cat
by_total
TotalPredCons_PercentOfTotal_a <- round((by_cat/btc)*100,2)
colnames(TotalPredCons_PercentOfTotal_a) <- c("fall_2", "fall_4", "spring_2", "spring_4")
TotalPredCons_PercentOfTotal_b <- data.frame(cat = TotalPredConsumption_xCat$cat, TotalPredCons_PercentOfTotal_a)
sum(TotalPredCons_PercentOfTotal_b$fall_2)
sum(TotalPredCons_PercentOfTotal_b$fall_4)
sum(TotalPredCons_PercentOfTotal_b$spring_2)
sum(TotalPredCons_PercentOfTotal_b$spring_4)
TotalPredCons_PercentOfTotal_b
